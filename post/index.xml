<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ICNote - A Site for Sharing Notes about IC</title>
    <link>https://himingway.github.io/post/</link>
    <description>Recent content in Posts on ICNote - A Site for Sharing Notes about IC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 12 Sep 2019 21:47:15 +0800</lastBuildDate>
    
	<atom:link href="https://himingway.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PCI Configuration</title>
      <link>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-configuration/</link>
      <pubDate>Thu, 12 Sep 2019 21:47:15 +0800</pubDate>
      
      <guid>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-configuration/</guid>
      <description>1. PCI Configuration 过程 例如，对 Bus Number 为 2，Device Number 为 1，Function Number 为 0 的 PCI 设备的第 3 个寄存器进行配置，具体步骤如下： Step1: 向 CONFIG_ADDRESS (CF8h) 地址（如图 3-2 所示</description>
    </item>
    
    <item>
      <title>EDA 工具使用笔记</title>
      <link>https://himingway.github.io/post/eda/</link>
      <pubDate>Tue, 10 Sep 2019 00:42:49 +0800</pubDate>
      
      <guid>https://himingway.github.io/post/eda/</guid>
      <description>1. VCS 与 Verdi 联合使用 在 VCS 编译的时候，要额外加上 -debug_access+all -kdb -lca 这个三个选项参数，这样就能在 VCS Compile 中看到 simv.daidir/kdb.elab++这个目录，</description>
    </item>
    
    <item>
      <title>PCI Note</title>
      <link>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-note/</link>
      <pubDate>Mon, 09 Sep 2019 00:17:28 +0800</pubDate>
      
      <guid>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-note/</guid>
      <description>1. 关于 Memory Write and Invalidate 规范中的描述是 It allows a memory performance optimization by invalidating a &amp;ldquo;dirty&amp;rdquo; line in a write-back cache without requiring the actual write-back cycle thus shortening access time. 对一个新手来说理解这句话很难，天书嘛。就像我。其实非常简单，分</description>
    </item>
    
    <item>
      <title>PCI Fundamental and PCI Transaction Ordering (2)</title>
      <link>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-fundamental-and-pci-transaction-ordering-2/</link>
      <pubDate>Mon, 09 Sep 2019 00:01:41 +0800</pubDate>
      
      <guid>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-fundamental-and-pci-transaction-ordering-2/</guid>
      <description>2. PCI Protocol 2.1. Bus Command PCI 的 C/BE#信号复用命令与字节选通引脚。在地址周期的时候，C/BE[3:0]#信号表示 PCI 总线的命令；这些命令如下表所示。 C/BE[3:0]# 命令</description>
    </item>
    
    <item>
      <title>PCI Fundamental and PCI Transaction Ordering (1)</title>
      <link>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-fundamental-and-pci-transaction-ordering-1/</link>
      <pubDate>Sun, 08 Sep 2019 17:41:25 +0800</pubDate>
      
      <guid>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/pci-fundamental-and-pci-transaction-ordering-1/</guid>
      <description>1. PCI Pin List 在 PICI 设备中，对于 target 设备，它的 PIN 最小的数目为 47 个；对于 Master 设备，它的 PIN 最小的数目为 49 个。除了这些基本的 PIN，PCI 设备还有一些扩展的 P</description>
    </item>
    
    <item>
      <title>Table of Content for PCI Fundamental and PCI Transaction Ordering</title>
      <link>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/table-of-content/</link>
      <pubDate>Sun, 08 Sep 2019 00:02:12 +0800</pubDate>
      
      <guid>https://himingway.github.io/post/pci-fundamental-and-pci-transaction-ordering/table-of-content/</guid>
      <description>PCI Fundamental and PCI Transaction Ordering (1) PCI Fundamental and PCI Transaction Ordering (2) 其它： PCI笔记 PCI Configuration</description>
    </item>
    
  </channel>
</rss>